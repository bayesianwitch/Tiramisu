package com.chrisstucchio.tiramisu.utils

trait ConnectionWrapper extends java.sql.Connection {
  protected val conn: java.sql.Connection

  def abort(x: java.util.concurrent.Executor): Unit = conn.abort(x)
  def clearWarnings(): Unit = conn.clearWarnings()
  def close(): Unit = conn.close()
  def commit(): Unit = conn.commit()
  def createArrayOf(x: String,y: Array[Object]): java.sql.Array = conn.createArrayOf(x,y)
  def createBlob(): java.sql.Blob = conn.createBlob()
  def createClob(): java.sql.Clob = conn.createClob()
  def createNClob(): java.sql.NClob = conn.createNClob()
  def createSQLXML(): java.sql.SQLXML = conn.createSQLXML()
  def createStatement(x: Int,y: Int,z: Int): java.sql.Statement = conn.createStatement(x,y,z)
  def createStatement(x: Int,y: Int): java.sql.Statement = conn.createStatement(x,y)
  def createStatement(): java.sql.Statement = conn.createStatement()
  def createStruct(x: String,y: Array[Object]): java.sql.Struct = conn.createStruct(x,y)
  def getAutoCommit(): Boolean = conn.getAutoCommit()
  def getCatalog(): String = conn.getCatalog()
  def getClientInfo(): java.util.Properties = conn.getClientInfo()
  def getClientInfo(x: String): String = conn.getClientInfo(x)
  def getHoldability(): Int = conn.getHoldability()
  def getMetaData(): java.sql.DatabaseMetaData = conn.getMetaData()
  def getNetworkTimeout(): Int = conn.getNetworkTimeout()
  def getSchema(): String = conn.getSchema()
  def getTransactionIsolation(): Int = conn.getTransactionIsolation()
  def getTypeMap(): java.util.Map[String,Class[_]] = conn.getTypeMap()
  def getWarnings(): java.sql.SQLWarning = conn.getWarnings()
  def isClosed(): Boolean = conn.isClosed()
  def isReadOnly(): Boolean = conn.isReadOnly()
  def isValid(x: Int): Boolean = conn.isValid(x)
  def nativeSQL(x: String): String = conn.nativeSQL(x)
  def prepareCall(x: String,y: Int,z: Int,w: Int): java.sql.CallableStatement = conn.prepareCall(x,y,z,w)
  def prepareCall(x: String,y: Int,z: Int): java.sql.CallableStatement = conn.prepareCall(x,y,z)
  def prepareCall(x: String): java.sql.CallableStatement = conn.prepareCall(x)
  def prepareStatement(x: String,y: Array[String]): java.sql.PreparedStatement = conn.prepareStatement(x,y)
  def prepareStatement(x: String,y: Array[Int]): java.sql.PreparedStatement = conn.prepareStatement(x,y)
  def prepareStatement(x: String,y: Int): java.sql.PreparedStatement = conn.prepareStatement(x,y)
  def prepareStatement(x: String,y: Int,z: Int,w: Int): java.sql.PreparedStatement = conn.prepareStatement(x,y,z,w)
  def prepareStatement(x: String,y: Int,z: Int): java.sql.PreparedStatement = conn.prepareStatement(x,y,z)
  def prepareStatement(x: String): java.sql.PreparedStatement = conn.prepareStatement(x)
  def releaseSavepoint(x: java.sql.Savepoint): Unit = conn.releaseSavepoint(x)
  def rollback(x: java.sql.Savepoint): Unit = conn.rollback(x)
  def rollback(): Unit = conn.rollback()
  def setAutoCommit(x: Boolean): Unit = conn.setAutoCommit(x)
  def setCatalog(x: String): Unit = conn.setCatalog(x)
  def setClientInfo(x: java.util.Properties): Unit = conn.setClientInfo(x)
  def setClientInfo(x: String,y: String): Unit = conn.setClientInfo(x,y)
  def setHoldability(x: Int): Unit = conn.setHoldability(x)
  def setNetworkTimeout(x: java.util.concurrent.Executor,y: Int): Unit = conn.setNetworkTimeout(x,y)
  def setReadOnly(x: Boolean): Unit = conn.setReadOnly(x)
  def setSavepoint(x: String): java.sql.Savepoint = conn.setSavepoint(x)
  def setSavepoint(): java.sql.Savepoint = conn.setSavepoint()
  def setSchema(x: String): Unit = conn.setSchema(x)
  def setTransactionIsolation(x: Int): Unit = conn.setTransactionIsolation(x)
  def setTypeMap(x: java.util.Map[String,Class[_]]): Unit = conn.setTypeMap(x)
  def isWrapperFor(x: Class[_]): Boolean = conn.isWrapperFor(x)
  def unwrap[T](x: Class[T]): T = conn.unwrap(x)
}
